<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:cc="clr-namespace:FileExplorerRedesign.Custom_Controls"
                    xmlns:prop="clr-namespace:FileExplorerRedesign.Properties">

    <!--#region Window Buttons-->
    <Style TargetType="{x:Type Button}"
           x:Key="WindowChromeButtonStyle">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Width" Value="44" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{StaticResource IconActiveBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="IsMouseCaptured" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource ButtonMouseOverBrush}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}"
           x:Key="WindowChromeRestoreButtonStyle"
           BasedOn="{StaticResource WindowChromeButtonStyle}">
        <Setter Property="Content"
                Value="&#xE922;" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                         Value="Maximized">
                <Setter Property="Content" Value="&#xE923;" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}"
           x:Key="WindowChromeCloseButtonStyle"
           BasedOn="{StaticResource WindowChromeButtonStyle}">
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="true" />
                    <Condition Property="IsMouseCaptured"
                               Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background"
                        Value="{StaticResource CaptionCloseButtonMouseOverBrush}" />
            </MultiTrigger>

            <Trigger Property="IsPressed"
                     Value="True">
                <Setter Property="Background"
                        Value="{StaticResource CaptionCloseButtonDownBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region Drive and Folder Buttons-->
    <Style TargetType="{x:Type cc:DriveAndFolderButton}">
        <Setter Property="Foreground" Value="{StaticResource NavFontBrush}" />
        <Setter Property="GroupName" Value="DNFButton" />
        <Setter Property="MinHeight" Value="35" />
        <Setter Property="MinWidth" Value="100" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type cc:DriveAndFolderButton}">
                    <Grid
                        Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="47" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Border Name="bgBorder"
                                Grid.ColumnSpan="3"
                                BorderBrush="{DynamicResource BorderBrush}"
                                BorderThickness="0"
                                CornerRadius="7"
                                Opacity=".1"
                                Background="#303030"
                                Visibility="Collapsed">
                            <Border
                                    Background="{StaticResource NavFontBrush}"
                                    CornerRadius="7"
                                    Opacity=".1" />
                        </Border>

                        <Path
                            Grid.Column="0"
                            Data="{TemplateBinding Icon}"
                            Stretch="Uniform"
                            Fill="{TemplateBinding IconFill}"
                            Height="15"
                            Width="20"
                            Effect="{DynamicResource DropShadowEffect}" />

                        <ContentPresenter
                            Grid.Column="1"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Effect="{DynamicResource DropShadowEffect}" />


                        <!--Unpin Button-->
                        <Button
                            Name="UnPinButton"
                            Background="Transparent"
                            Content="{DynamicResource UnPin}"
                            Command="{TemplateBinding UnPinCommand}"
                            CommandParameter="{Binding}"
                            Grid.Column="2"
                            Width="40"
                            Foreground="{DynamicResource NavFontBrush}"
                            Style="{DynamicResource ButtonWithIconStyle}"
                            Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bgBorder" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="bgBorder"
                                    Property="Opacity"
                                    Value=".5" />
                        </Trigger>

                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="bgBorder"
                                    Property="Visibility"
                                    Value="Visible" />
                            <Setter TargetName="bgBorder"
                                    Property="Opacity"
                                    Value=".5" />
                        </Trigger>

                        <DataTrigger Binding="{Binding IsPinned}"
                                     Value="True">
                            <Setter TargetName="UnPinButton"
                                    Property="Visibility"
                                    Value="Visible"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Menu Header Buttons-->
    <Style x:Key="MenuHeaderRadioButtonStyle"
           TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Padding" Value="20,0" />
        <Setter Property="Foreground" Value="{StaticResource MenuHeader.Static}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="GroupName" Value="MenuHeader" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Padding="{TemplateBinding Padding}">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter Property="Foreground" Value="{StaticResource MenuHeader.Checked}" />
                            <Setter Property="FontWeight" Value="SemiBold" />
                        </Trigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding DarkMode, Source={x:Static prop:Settings.Default}}"
                                           Value="True" />
                                <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                                           Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground"
                                    Value="White" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Buttons With Icons-->
    <Style x:Key="ButtonWithIconStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <Path Name="Path"
                              Data="{TemplateBinding Content}"
                              Fill="{TemplateBinding Foreground}"
                              Height="{TemplateBinding FontSize}"
                              Stretch="Uniform" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding DarkMode, Source={x:Static prop:Settings.Default}}"
                                           Value="False" />
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                           Value="True" />
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding IsMouseCaptured, RelativeSource={RelativeSource Self}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource ButtonMouseOverBrush}" />
                        </MultiDataTrigger>

                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="{StaticResource DisabledFontBrush}" />
                        </Trigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding DarkMode, Source={x:Static prop:Settings.Default}}" Value="True"/>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource MenuHeader.Static}"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleButtonWithIconStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}">
                        <Path
                            Name="Path"
                            Data="{TemplateBinding Content}"
                            Fill="{TemplateBinding Foreground}"
                            Height="{TemplateBinding FontSize}"
                            Stretch="Uniform" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding DarkMode, Source={x:Static prop:Settings.Default}}"
                                     Value="True">
                            <Setter Property="Foreground"
                                    Value="{StaticResource MenuHeader.Static}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Toggle Expand/Collapse Sub Menu-->
    <Style x:Key="ExpandCollapseToggleButtonStyle"
           TargetType="{x:Type ToggleButton}"
           BasedOn="{StaticResource ToggleButtonWithIconStyle}">
        <Setter Property="Content" Value="{DynamicResource CollapseArrow}"  />
        <Style.Triggers>
            <Trigger Property="IsChecked"
                     Value="True">
                <Setter Property="Content"
                        Value="{DynamicResource ExpandArrow}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region DarkMode Toggle Button-->
    <Style x:Key="DarkLightModeToggleButtonStyle"
           TargetType="{x:Type ToggleButton}"
           BasedOn="{StaticResource ToggleButtonWithIconStyle}">
        <Setter Property="Content" Value="{DynamicResource Moon}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding DarkMode, Source={x:Static prop:Settings.Default}}"
                         Value="True">
                <Setter Property="Content"
                        Value="{DynamicResource Sun}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region Sub Menu Icon Button-->
    <Style x:Key="SubMenuIconButtonStyle"
           TargetType="{x:Type cc:SubMenuIconButton}">
        <Setter Property="Background"
                Value="#33121212" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Foreground"
                Value="{DynamicResource IconActiveBrush}" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="MinWidth"
                Value="60" />
        <Setter Property="Margin"
                Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type cc:SubMenuIconButton}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="8">
                        <Grid>
                            <Border Name="bgBorder"
                                    BorderBrush="{StaticResource BorderBrush}"
                                    BorderThickness="0"
                                    Opacity=".1"
                                    Visibility="Collapsed">
                                <Border
                                    Background="{StaticResource NavFontBrush}"
                                    CornerRadius="7"
                                    Opacity=".1" />
                            </Border>
                            <StackPanel
                                Orientation="Vertical"
                                Margin="5">

                                <Path Name="Path"
                                      Data="{TemplateBinding Icon}"
                                      Fill="{TemplateBinding Foreground}"
                                      Height="24"
                                      Stretch="Uniform" />

                                <TextBlock
                                    Name="TextBlock"
                                    Margin="0,5,0,0"
                                    FontWeight="SemiBold"
                                    Text="{TemplateBinding Content}"
                                    HorizontalAlignment="Center" />
                            </StackPanel>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger
                            SourceName="TextBlock"
                            Property="Text"
                            Value="">
                            <Setter
                                TargetName="TextBlock"
                                Property="Visibility"
                                Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="IsMouseCaptured"
                                 Value="True">
                            <Setter TargetName="bgBorder" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="bgBorder" Property="Opacity" Value="1"/>
                        </Trigger>

                        <DataTrigger Binding="{Binding DarkMode, Source={x:Static prop:Settings.Default}}"
                                     Value="True">
                            <Setter Property="Foreground" Value="{StaticResource MenuHeader.Static}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
</ResourceDictionary>